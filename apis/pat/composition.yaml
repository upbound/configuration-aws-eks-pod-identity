apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: pat.xpodidentities.aws.platform.upbound.io
  labels:
    provider: aws
    function: patch-and-transform
spec:
  writeConnectionSecretsToNamespace: upbound-system
  compositeTypeRef:
    apiVersion: aws.platform.upbound.io/v1alpha1
    kind: XPodIdentity
  mode: Pipeline
  pipeline:
    - step: patch-and-transform
      functionRef:
        name: crossplane-contrib-function-patch-and-transform
      input:
        apiVersion: pt.fn.crossplane.io/v1beta1
        kind: Resources
        patchSets:
          - name: providerConfigRef
            patches:
              - fromFieldPath: spec.parameters.providerConfigName
                toFieldPath: spec.providerConfigRef.name
                type: FromCompositeFieldPath
          - name: deletionPolicy
            patches:
              - fromFieldPath: spec.parameters.deletionPolicy
                toFieldPath: spec.deletionPolicy
                type: FromCompositeFieldPath
          - name: region
            patches:
              - fromFieldPath: spec.parameters.region
                toFieldPath: spec.forProvider.region
                type: FromCompositeFieldPath
        resources:
          - name: podIdentityAssociation
            base:
              apiVersion: eks.aws.upbound.io/v1beta1
              kind: PodIdentityAssociation
              spec:
                forProvider:
                  roleArnSelector:
                    matchControllerRef: true
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet
              - patchSetName: region
                type: PatchSet
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.clusterName
                toFieldPath: spec.forProvider.clusterName
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.clusterNameRef
                toFieldPath: spec.forProvider.clusterNameRef
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.clusterNameSelector
                toFieldPath: spec.forProvider.clusterNameSelector
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.serviceAccount.name
                toFieldPath: spec.forProvider.serviceAccount
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.serviceAccount.namespace
                toFieldPath: spec.forProvider.namespace
              - type: ToCompositeFieldPath
                fromFieldPath: status.atProvider.clusterName
                toFieldPath: status.podIdentity.clusterName

          - name: iamRole
            base:
              apiVersion: iam.aws.upbound.io/v1beta1
              kind: Role
              spec:
                forProvider:
                  assumeRolePolicy: |
                    {
                      "Version":"2012-10-17",
                      "Statement":[
                        {
                          "Sid":"AllowEksAuthToAssumeRoleForPodIdentity",
                          "Effect":"Allow",
                          "Principal":{
                            "Service":"pods.eks.amazonaws.com"
                          },
                          "Action":[
                            "sts:AssumeRole",
                            "sts:TagSession"
                          ]
                        }
                      ]
                    }
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.inlinePolicy
                toFieldPath: spec.forProvider.inlinePolicy
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.managedPolicyArns
                toFieldPath: spec.forProvider.managedPolicyArns
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.permissionsBoundaryArn
                toFieldPath: spec.forProvider.permissionsBoundary
              - type: ToCompositeFieldPath
                fromFieldPath: status.atProvider.arn
                toFieldPath: status.podIdentity.roleArn
